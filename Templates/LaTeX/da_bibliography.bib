
@book{aho_compilers:_2006,
	edition = {2nd},
	title = {Compilers: {Principles}, {Techniques}, and {Tools}},
	shorttitle = {Compilers},
	publisher = {Addison Wesley},
	author = {Aho, Alfred V. and Lahm, Monica S. and Sethi, Ravi and Ullmann, Jeffrey D.},
	year = {2006}
}

@book{terry_compiling_2004,
	address = {Harlow, England ; New York},
	title = {Compiling {With} {C}\# {And} {Java}},
	isbn = {978-0-321-26360-5},
	abstract = {A compiler is a special program that processes statements in a particular programming language and turns them into machine code that the computer can understand.Compiling with C\# and Java is an introduction to compiler construction using the Java Virtual Machine (JVM) and .NET Common Language Routine (CLR), both of which provide the interface between compiler, C\# or Java code, and hardware.Loaded with exercises, examples and case studies, the text balances theory and practice to provide the reader with a solid working knowledge of the subject.},
	language = {Englisch},
	publisher = {Addison-Wesley Educational Publishers Inc},
	author = {Terry, Pat},
	year = {2004}
}

@book{martin_agile_2011,
	address = {Upper Saddle River, N.J.},
	title = {Agile {Software} {Development}, {Principles}, {Patterns}, and {Practices}},
	isbn = {978-0-13-276058-4},
	abstract = {For courses in Object-Oriented Design, C++ Intermediate Programming, and Object-Oriented Programming.  Written for software engineers "in the trenches," this text focuses on the technology-the principles, patterns, and process-that help software engineers effectively manage increasingly complex operating systems and applications. There is also a strong emphasis on the people behind the technology. This text will prepare students for a career in software engineering and serve as an on-going education for software engineers.},
	language = {Englisch},
	publisher = {Pearson Education, Inc.},
	author = {Martin, Robert C.},
	year = {2011}
}

@misc{khason_computer_2008,
	title = {Computer languages and facial hair -- take two},
	url = {http://khason.net/blog/computer-languages-and-facial-hair-%e2%80%93-take-two/},
	abstract = {About four years ago, I wrote an article about relationship between facial hair and computer languages success (this is cached page, the original article has},
	language = {English},
	urldate = {2015-02-20},
	journal = {Just code},
	author = {Khason, Tamir},
	year = {2008},
	file = {Snapshot:/Users/peter/Zotero/storage/7TDXEAHT/computer-languages-and-facial-hair-–-take-two.html:text/html}
}

@misc{khason_why_2004,
	title = {Why {Microsoft} can {Blow}-{Off} with {C}\#?},
	shorttitle = {Aspect and {Subject} {Oriented} programming},
	url = {http://www.alenz.org/mirror/khason/why-microsoft-can-blow-off-with-c.html},
	urldate = {2015-02-20},
	journal = {Aspect and Subject Oriented programming},
	author = {Khason, Tamir},
	year = {2004},
	file = {Snapshot:/Users/peter/Zotero/storage/BGV7X6M3/why-microsoft-can-blow-off-with-c.html:text/html}
}

@article{wirth_what_1977,
	title = {What {Can} {We} {Do} {About} the {Unnecessary} {Diversity} of {Notation} for {Syntactic} {Definitions}?},
	volume = {20},
	issn = {0001-0782},
	url = {http://doi.acm.org/10.1145/359863.359883},
	doi = {10.1145/359863.359883},
	abstract = {The population of programming languages is steadily growing, and there is no end of this growth in sight. Many language definitions appear in journals, many are found in technical reports, and perhaps an even greater number remains confined to proprietory circles. After frequent exposure to these definitions, one cannot fail to notice the lack of “common denominators.” The only widely accepted fact is that the language structure is defined by a syntax. But even notation for syntactic description eludes any commonly agreed standard form, although the underlying ancestor is invariably the Backus-Naur Form of the Algol 60 report. As variations are often only slight, they become annoying for their very lack of an apparent motivation.},
	number = {11},
	urldate = {2015-02-20},
	journal = {Commun. ACM},
	author = {Wirth, Niklaus},
	month = nov,
	year = {1977},
	keywords = {extended BNF, syntactic description language},
	pages = {822--823}
}

@book{wirth_compiler_1996,
	address = {Reading, Mass.},
	title = {Compiler {Construction}},
	isbn = {978-0-201-40353-4},
	abstract = {A refreshing antidote to heavy theoretical tomes, this book is a concise, practical guide to modern compiler design and construction by an acknowledged master. Readers are taken step-by-step through each stage of compiler design, using the simple yet powerful method of recursive descent to create a compiler for Oberon-0, a subset of the author's Oberon language.  The hands-on, pragmatic approach makes the book equally attractive for project-oriented courses in compiler design and for software engineers wishing to develop their skills in system software.  A disk provided with the book gives full listings of the Oberon-0 compiler and associated tools.  There is a bug in the installation of this disk, to correct please do the following: *Open the file install.inf in a text editor (e.g. Notepad), this file is found in the win\_sys directory.  *Scroll down until you find a section marked (files), this is the second last section and is very close to the bottom of the file.  *Find the line readme.wri =\$I, 9000,0,Information on Oberon, 0,0 and change it so that it reads readme.txt =\$I, 9000,0,Information on Oberon, 0,0},
	language = {Englisch},
	publisher = {Addison Wesley},
	author = {Wirth, Niklaus},
	month = jun,
	year = {1996}
}

@book{drucker_practice_2006,
	address = {New York, NY},
	edition = {Reissue},
	title = {The {Practice} of {Management}},
	isbn = {978-0-06-087897-9},
	abstract = {A classic since its publication in 1954, The Practice of Management was the first book to look at management as a whole and being a manager as a separate responsibility. The Practice of Management created the discipline of modern management practices. Readable, fundamental, and basic, it remains an essential book for students, aspiring managers, and seasoned professionals.},
	language = {English},
	publisher = {HarperBusiness},
	author = {Drucker, Peter F.},
	month = oct,
	year = {2006}
}

@article{goebel_denkfehler_2011,
	address = {Vienna},
	title = {Denkfehler},
	language = {German},
	journal = {profil},
	author = {Goebel, Tina},
	month = sep,
	year = {2011}
}

@misc{kaliya_hamlin_unconference_2006,
	title = {Unconference {Methods}: {Fish} {Bowl} {Dialogue}},
	shorttitle = {Unconference {Methods}},
	url = {http://www.unconference.net/unconference-methods-fish-bowl-dialogue/},
	urldate = {2015-02-20},
	journal = {UnConference.net},
	author = {{Kaliya Hamlin}},
	month = jul,
	year = {2006},
	file = {Snapshot:/Users/peter/Zotero/storage/VWZDMRIW/unconference-methods-fish-bowl-dialogue.html:text/html}
}

@book{hattie_visible_2008,
	address = {London ; New York},
	edition = {1st},
	title = {Visible {Learning}: {A} {Synthesis} of {Over} 800 {Meta}-{Analyses} {Relating} to {Achievement}},
	isbn = {978-0-415-47618-8},
	shorttitle = {Visible {Learning}},
	abstract = {This unique and ground-breaking book is the result of 15 years research and synthesises over 800 meta-analyses on the influences on achievement in school-aged students. It builds a story about the power of teachers, feedback, and a model of learning and understanding. The research involves many millions of students and represents the largest ever evidence based research into what actually works in schools to improve learning. Areas covered include the influence of the student, home, school, curricula, teacher, and teaching strategies. A model of teaching and learning is developed based on the notion of visible teaching and visible learning. A major message is that what works best for students is similar to what works best for teachers – an attention to setting challenging learning intentions, being clear about what success means, and an attention to learning strategies for developing conceptual understanding about what teachers and students know and understand. Although the current evidence based fad has turned into a debate about test scores, this book is about using evidence to build and defend a model of teaching and learning. A major contribution is a fascinating benchmark/dashboard for comparing many innovations in teaching and schools.},
	language = {English},
	publisher = {Routledge},
	author = {Hattie, John},
	month = nov,
	year = {2008}
}

@book{hengstschlager_durchschnittsfalle_2012,
	address = {Salzburg},
	title = {Die {Durchschnittsfalle}},
	isbn = {978-3-7110-0022-4},
	language = {German},
	publisher = {Ecowin Verlag GmbH},
	author = {Hengstschläger, Markus},
	month = jan,
	year = {2012}
}

@techreport{hintenaus_automation_2013,
	address = {Salzburg},
	type = {Technical {Report}},
	title = {Automation {Instruction} {Set} {Specification}},
	language = {English},
	institution = {University Salzburg},
	author = {Hintenaus, Peter},
	month = oct,
	year = {2013}
}

@article{krasner_description_1988,
	title = {A {Description} of the {Model}-{View}-{Controller} {User} {Interface} {Paradigm} in the {Smalltalk}-80 system},
	volume = {1},
	url = {http://citeseer.nj.nec.com/krasner88description.htm},
	language = {English},
	number = {3},
	journal = {Journal of Object Oriented Programming},
	author = {Krasner, Glenn E. and Pope, Stephen T.},
	year = {1988},
	pages = {26 -- 49}
}

@article{lewis_catch-line_1903,
	title = {Catch-{Line} and {Argument}},
	volume = {15},
	journal = {The Book-Keeper},
	author = {Lewis, Elias St. Elmo},
	year = {1903}
}

@book{malik_fuhren_2001,
	address = {München},
	title = {Führen, {Leisten}, {Leben}. {Wirksames} {Management} für eine neue {Zeit}.},
	isbn = {978-3-453-19684-1},
	language = {German},
	publisher = {Heyne},
	author = {Malik, Fredmund},
	month = nov,
	year = {2001}
}

@book{martin_clean_2011,
	address = {Upper Saddle River, NJ},
	edition = {1st},
	title = {The {Clean} {Coder}: {A} {Code} of {Conduct} for {Professional} {Programmers}},
	isbn = {978-0-13-708107-3},
	shorttitle = {The {Clean} {Coder}},
	abstract = {Programmers who endure and succeed amidst swirling uncertainty and nonstop pressure share a common attribute: They care deeply about the practice of creating software. They treat it as a craft. They are professionals.     In  The Clean Coder: A Code of Conduct for Professional Programmers,  legendary software expert Robert C. Martin introduces the disciplines, techniques, tools, and practices of true software craftsmanship. This book is packed with practical advice–about everything from estimating and coding to refactoring and testing. It covers much more than technique: It is about attitude. Martin shows how to approach software development with honor, self-respect, and pride; work well and work clean; communicate and estimate faithfully; face difficult decisions with clarity and honesty; and understand that deep knowledge comes with a responsibility to act.     Readers will learn    What it means to behave as a true software craftsman   How to deal with conflict, tight schedules, and unreasonable managers   How to get into the flow of coding, and get past writer’s block   How to handle unrelenting pressure and avoid burnout   How to combine enduring attitudes with new development paradigms   How to manage your time, and avoid blind alleys, marshes, bogs, and swamps   How to foster environments where programmers and teams can thrive   When to say “No”–and how to say it   When to say “Yes”–and what yes really means      Great software is something to marvel at: powerful, elegant, functional, a pleasure to work with as both a developer and as a user. Great software isn’t written by machines. It is written by professionals with an unshakable commitment to craftsmanship.  The Clean Coder  will help you become one of them–and earn the pride and fulfillment that they alone possess.},
	language = {English},
	publisher = {Prentice Hall},
	author = {Martin, Robert C.},
	month = may,
	year = {2011}
}

@book{neuweg_schulische_2006,
	edition = {3rd},
	title = {Schulische {Leistungsbeurteilung}},
	publisher = {Trauner},
	author = {Neuweg, Hans-Georg},
	year = {2006}
}

@book{rechenberg_compiler-generator_1988,
	address = {München},
	edition = {2nd},
	title = {Ein {Compiler}-{Generator} für {Mikrocomputer}},
	language = {German},
	publisher = {Hanser},
	author = {Rechenberg, Peter and Mössenböck, Hanspeter},
	year = {1988}
}

@book{shakespeare_mr._1623,
	address = {London},
	title = {Mr. {William} {Shakespeares} comedies, histories, tragedies: published according to the true originall copies},
	shorttitle = {1st. {Folio} ({Shakespeare})},
	url = {http://doyle.lib.muohio.edu/cdm4/document.php?CISOROOT=/wshakespeare&CISOPTR=45&CISOSHOW=0},
	language = {English},
	publisher = {Printed by Isaac Iaggard and Ed. Blount},
	author = {Shakespeare, William},
	year = {1623}
}

@techreport{stern_forderliche_2010,
	address = {Wien},
	title = {Förderliche {Leistungsbewertung}},
	url = {https://www.bmbf.gv.at/schulen/unterricht/ba/leistungsbewertung_stern_17212.pdf?4dzgm2},
	language = {German},
	institution = {Österreichisches Zentrum für Persönlichkeitsbildung und soziales Lernen},
	author = {Stern, Thomas},
	month = dec,
	year = {2010},
	file = {leistungsbewertung_stern2010.pdf:/Users/peter/Zotero/storage/9BV2WEB6/leistungsbewertung_stern2010.pdf:application/pdf}
}

@book{thun_miteinander_2009,
	address = {Reinbek bei Hamburg},
	edition = {10th},
	title = {Miteinander reden: {Kommunikationspsychologie} für {Führungskräfte}},
	isbn = {978-3-499-61531-3},
	shorttitle = {Miteinander reden},
	abstract = {Der Kommunikationskurs für Führungskräfte  Miteinander reden ist von zentraler Bedeutung für Führungskräfte. Weder ihre fachlichen Kompetenzen noch ihre Position schützen sie vor Missverständnissen, Unklarheiten und verfehltem Gesprächsaufbau. Ihre Aufgaben in Teams und hierarchisch strukturierten Unternehmen verlangen aber, dass sie auf der Grundlage sachlicher und menschlicher Klarheit ihre Kontakte und Beziehungen effektiv und erfreulich gestalten, auch und gerade bei konfliktgeladenen Themen.  An den besonderen Aufgaben von Führungskräften orientiert, verbindet dieses Handbuch Anleitungen, eingefahrene Kommunikationsweisen zu hinterfragen, mit lehrreichen Fallbeispielen und Übungen für konstruktives Miteinander reden.},
	language = {Deutsch},
	publisher = {Rowohlt},
	author = {Thun, Friedemann Schulz von and Ruppel, Johannes and Stratmann, Roswitha},
	year = {2009}
}

@book{tanenbaum_modern_2009,
	edition = {3rd},
	title = {Modern {Operating} {Systems}},
	shorttitle = {Modern {Operating} {Systems} {Edition}},
	language = {English},
	publisher = {Pearson International Edition},
	author = {Tanenbaum, Andrew S.},
	year = {2009}
}

@misc{wikipedia_fishbowl_2014,
	title = {Fishbowl (conversation)},
	copyright = {Creative Commons Attribution-ShareAlike License},
	url = {http://en.wikipedia.org/w/index.php?title=Fishbowl_(conversation)&oldid=628640314},
	abstract = {A fishbowl conversation is a form of dialog that can be used when discussing topics within large groups. Fishbowl conversations are usually used in participatory events like Open Space Technology and Unconferences. The advantage of Fishbowl is that it allows the entire group to participate in a conversation. Several people can join the discussion.},
	language = {en},
	urldate = {2015-02-20},
	journal = {Wikipedia, the free encyclopedia},
	author = {{Wikipedia}},
	month = oct,
	year = {2014},
	note = {Page Version ID: 628640314},
	file = {Snapshot:/Users/peter/Zotero/storage/UV89QKGK/index.html:text/html}
}

@misc{wikipedia_paul_2014,
	title = {Paul {Watzlawick}},
	copyright = {Creative Commons Attribution-ShareAlike License},
	url = {http://en.wikipedia.org/w/index.php?title=Paul_Watzlawick&oldid=616899657},
	abstract = {Paul Watzlawick (July 25, 1921 – March 31, 2007) was an Austrian-American family therapist, psychologist, communications theorist, and philosopher. A theoretician in communication theory and radical constructivism, he commented in the fields of family therapy and general psychotherapy. Watzlawick believed that people create their own suffering in the very act of trying to fix their emotional problems. He was one of the most influential figures at the Mental Research Institute and lived and worked in Palo Alto, California.},
	language = {en},
	urldate = {2015-02-20},
	journal = {Wikipedia, the free encyclopedia},
	author = {{Wikipedia}},
	month = jul,
	year = {2014},
	note = {Page Version ID: 616899657},
	file = {Snapshot:/Users/peter/Zotero/storage/SM6KF4I7/index.html:text/html}
}

@misc{wikipedia_tapetum_2015,
	title = {Tapetum lucidum},
	copyright = {Creative Commons Attribution-ShareAlike License},
	url = {http://en.wikipedia.org/w/index.php?title=Tapetum_lucidum&oldid=640886039},
	abstract = {The tapetum lucidum /təˈpiːtəm/ (Latin: "bright tapestry", plural tapeta lucida) is a layer of tissue in the eye of many vertebrates. Lying immediately behind the retina it reflects visible light back through the retina, increasing the light available to the photoreceptors, though blurring the initial image of the light on focus. The tapetum lucidum contributes to the superior night vision of some animals. Many of these animals are nocturnal, especially carnivores that hunt their prey at night, while others are deep sea animals.
Similar adaptations occur in some species of spiders, although these are not the result of a tapetum lucidum. Most primates, including humans, lack a tapetum lucidum, and compensate for this by perceptive recognition methods.},
	language = {en},
	urldate = {2015-02-20},
	journal = {Wikipedia, the free encyclopedia},
	author = {{Wikipedia}},
	month = jan,
	year = {2015},
	note = {Page Version ID: 640886039},
	file = {Snapshot:/Users/peter/Zotero/storage/4HE7W5GB/index.html:text/html}
}

@misc{apple_swift_2014,
	title = {Swift - {Apple} {Developer}},
	url = {https://developer.apple.com/swift/},
	abstract = {Swift is an innovative new programming language for iOS and OS X with concise yet expressive syntax that produces lightning-fast apps. It makes writing code interactive and fun, and works side-by-side with Objective-C.},
	urldate = {2015-03-05},
	author = {Apple},
	year = {2014},
	file = {Snapshot:/Users/peter/Zotero/storage/K43SRW66/swift.html:text/html}
}

@techreport{bauer_nobeard_2016,
	address = {Leonding},
	title = {The {NoBeard} {Report}},
	url = {https://github.com/Bauepete/no-beard/blob/master/doc/NoBeardReport/NoBeardReport.pdf},
	language = {English},
	institution = {HTBLA Leonding},
	author = {Bauer, Peter},
	year = {2016}
}

@misc{wikipedia_jean_2014,
	title = {Jean {Ichbiah}},
	copyright = {Creative Commons Attribution-ShareAlike License},
	url = {http://en.wikipedia.org/w/index.php?title=Jean_Ichbiah&oldid=639475683},
	abstract = {Jean David Ichbiah (25 March 1940 – 26 January 2007) was a French computer scientist and the initial chief designer (from 1977–1983) of Ada, a general-purpose, strongly typed programming language with certified validated compilers. At the time, he was a member of the Programming Research division at CII Honeywell Bull (CII-HB) in Louveciennes, France. He had previously designed an experimental system implementation language called LIS (1972–1974), based on Pascal and Simula (in fact, he had been chairman of the Simula User's Group), and was one of the founding members of IFIP WG 2.4 on Systems Implementation Languages.
Ichbiah's team submitted the language design labelled "Green" to the competition to choose the United States Department of Defense's embedded programming language. When Green was selected in 1978, he continued as chief designer of the language, named "Ada". In 1980, Ichbiah left CII-HB and founded the Alsys corporation in La Celle-Saint-Cloud, which continued language definition to standardize Ada 83, and later went into the Ada compiler business, also supplying special validated compiler systems to NASA, the US Army, and others. He later moved to the Waltham, Massachusetts subsidiary of Alsys.
Ichbiah designed the keyboard layout FITALY which is specifically optimized for stylus or touch-based input, and subsequently started the Textware company, which sells text entry software for PDAs and tablet PCs, as well as text-entry software for medical transcription on PCs.
In 1979, Jean Ichbiah was designated a "chevalier" (knight) of the French Legion of Honour and a "correspondent" of the French Academy of Sciences. He received a Certificate of Distinguished Service from the DoD for his work on Ada.
He was a descendant of Jews from Thessaloniki who emigrated to France. Jean Ichbiah died from complications of a brain tumor on January 26, 2007.},
	language = {en},
	urldate = {2015-03-08},
	journal = {Wikipedia, the free encyclopedia},
	author = {{Wikipedia}},
	month = dec,
	year = {2014},
	note = {Page Version ID: 639475683},
	file = {Snapshot:/Users/peter/Zotero/storage/5UCHIX8S/index.html:text/html}
}

@misc{wikipedia_dennis_2015,
	title = {Dennis {Ritchie}},
	copyright = {Creative Commons Attribution-ShareAlike License},
	url = {http://en.wikipedia.org/w/index.php?title=Dennis_Ritchie&oldid=649580912},
	abstract = {Dennis MacAlistair Ritchie (September 9, 1941 – c. October 12, 2011) was an American computer scientist. He created the C programming language and, with long-time colleague Ken Thompson, the Unix operating system. Ritchie and Thompson received the Turing Award from the ACM in 1983, the Hamming Medal from the IEEE in 1990 and the National Medal of Technology from President Clinton in 1999. Ritchie was the head of Lucent Technologies System Software Research Department when he retired in 2007. He was the "R" in K\&R C and commonly known by his username dmr.},
	language = {en},
	urldate = {2015-03-08},
	journal = {Wikipedia, the free encyclopedia},
	author = {{Wikipedia}},
	month = mar,
	year = {2015},
	note = {Page Version ID: 649580912},
	file = {Snapshot:/Users/peter/Zotero/storage/X6N4UQIC/index.html:text/html}
}

@misc{wikipedia_adele_2015,
	title = {Adele {Goldberg} (computer scientist)},
	copyright = {Creative Commons Attribution-ShareAlike License},
	url = {http://en.wikipedia.org/w/index.php?title=Adele_Goldberg_(computer_scientist)&oldid=644121205},
	abstract = {Adele Goldberg (born July 7, 1945) is a computer scientist who participated in the development of the programming language Smalltalk-80 and various concepts related to object-oriented programming while a researcher at the Xerox Palo Alto Research Center, PARC, in the 1970s.
Goldberg began working at PARC in 1973 as a laboratory and research assistant, and eventually became manager of the System Concepts Laboratory where she, Alan Kay, and others developed Smalltalk-80, which both developed the object-oriented approach of Simula 67 and introduced a programming environment of overlapping windows on graphic display screens. Not only was Smalltalk's innovative format simpler to use, it was also customizable and objects could be transferred among applications with minimal effort. Goldberg and Kay also were involved in the development of design templates, forerunners of the design patterns commonly used in software design. In 1988 Goldberg left PARC to co-found ParcPlace Systems, a company that created development tools for Smalltalk-based applications.
She served as president of the Association for Computing Machinery (ACM) from 1984 to 1986, and, together with Alan Kay and Dan Ingalls, received the ACM Software Systems Award in 1987 and was also included in Forbes's "Twenty Who Matter". She also received PC Magazine's Lifetime Achievement Award in 1996. In 1994 she was inducted as a Fellow of the Association for Computing Machinery.
Many of the concepts developed by Goldberg and her team at PARC became the basis for graphically based user interfaces, replacing the earlier command line based systems. According to Goldberg, Steve Jobs demanded a demonstration of the Smalltalk System, which she refused to give him. Her superiors eventually ordered her to, at which point she complied, satisfied that the decision to "give away the kitchen sink" to Jobs and his team was then their responsibility. Apple eventually used many of the ideas in the Alto and their implementations as the basis for their Macintosh desktop.
In 1988, Goldberg co-founded ParcPlace Systems, a Smalltalk-80 licensee, as chairwoman and CEO, serving as chairwoman until its 1995 merger with Digitalk.
She cofounded, and is currently working at Neometron, Inc. an Internet support provider in 1999, of Palo Alto, California. She works at Bullitics. At the same time, she continues to pursue her interest in education, formulating computer science courses at community colleges in the United States and at schools abroad. In the same vein, she is a board member and adviser at Cognito Learning Media, a provider of multimedia software for science education.
Goldberg was born in Cleveland, Ohio, and grew up in Chicago, Illinois. She received her bachelor's degree in mathematics at the University of Michigan in Ann Arbor, and a master's degree in information science from the University of Chicago. She received her PhD in information science from the University of Chicago in 1973. She completed her dissertation, "Computer-Assisted Instruction: The Application of Theorem-proving to Adaptive Response Analysis," while working as a research associate at Stanford University. She also served as a visiting researcher at Stanford University.
{\textasciicircum} a b c d e f Oakes, Elizabeth H. (2002). International encyclopedia of women scientists. New York, NY: Facts on File. pp. 136–137. ISBN 0816043817. 
{\textasciicircum} a b c "Adele Goldberg Biography". BookRags. 
{\textasciicircum} Chamond Liu, Smalltalk, Objects, and Design (San Jose, New York, and Shanghai: toExcel, 2000), 240
{\textasciicircum} Triumph of the Nerds, THE TELEVISION PROGRAM TRANSCRIPTS: PART III June 1996
{\textasciicircum} "WITI - Hall of Fame - Adele Goldberg, Founding Chairman, ParcPlace Systems, Inc". 
{\textasciicircum} "ParcPlace and Digitalk to Merge". 
{\textasciicircum} [1]},
	language = {en},
	urldate = {2015-03-08},
	journal = {Wikipedia, the free encyclopedia},
	author = {{Wikipedia}},
	month = jan,
	year = {2015},
	note = {Page Version ID: 644121205},
	file = {Snapshot:/Users/peter/Zotero/storage/QJ6IJZ2K/index.html:text/html}
}

@misc{wikipedia_barbara_2015,
	title = {Barbara {Liskov}},
	copyright = {Creative Commons Attribution-ShareAlike License},
	url = {http://en.wikipedia.org/w/index.php?title=Barbara_Liskov&oldid=646590588},
	abstract = {Barbara Liskov (born November 7, 1939 as Barbara Jane Huberman) is an American computer scientist who is an institute professor at the Massachusetts Institute of Technology and Ford Professor of Engineering in its School of Engineering's electrical engineering and computer science department.
{\textasciicircum} Barbara Liskov at the Mathematics Genealogy Project
{\textasciicircum} Barbara Liskov - A.M. Turing Award Winner
{\textasciicircum} Barbara Liskov, Programming Methodology Group, MIT.},
	language = {en},
	urldate = {2015-03-08},
	journal = {Wikipedia, the free encyclopedia},
	author = {{Wikipedia}},
	month = feb,
	year = {2015},
	note = {Page Version ID: 646590588},
	file = {Snapshot:/Users/peter/Zotero/storage/7RK3HG7K/index.html:text/html}
}

@misc{wikipedia_grace_2015,
	title = {Grace {Hopper}},
	copyright = {Creative Commons Attribution-ShareAlike License},
	url = {http://en.wikipedia.org/w/index.php?title=Grace_Hopper&oldid=650412004},
	abstract = {Grace Murray Hopper (December 9, 1906 – January 1, 1992) was an American computer scientist and United States Navy rear admiral. A pioneer in the field, she was one of the first programmers of the Harvard Mark I computer in 1944, and invented the first compiler for a computer programming language. She popularized the idea of machine-independent programming languages, which led to the development of COBOL, one of the first high-level programming languages. She is credited with popularizing the term "debugging" for fixing computer glitches (inspired by an actual moth removed from the computer). Owing to the breadth of her accomplishments and her naval rank, she is sometimes referred to as "Amazing Grace". The U.S. Navy Arleigh Burke class guided-missile destroyer USS Hopper (DDG-70) is named for her, as was the Cray XE6 "Hopper" supercomputer at NERSC.},
	language = {en},
	urldate = {2015-03-08},
	journal = {Wikipedia, the free encyclopedia},
	author = {{Wikipedia}},
	month = mar,
	year = {2015},
	note = {Page Version ID: 650412004},
	file = {Snapshot:/Users/peter/Zotero/storage/2XGCBI53/index.html:text/html}
}

@misc{wikipedia_guy_2015,
	title = {Guy {L}. {Steele} {Jr}.},
	copyright = {Creative Commons Attribution-ShareAlike License},
	url = {http://en.wikipedia.org/w/index.php?title=Guy_L._Steele_Jr.&oldid=649890638},
	abstract = {Guy Lewis Steele Jr. /ˈstiːl/, also known as "The Great Quux", and GLS /ˈɡlɪs/, is an American computer scientist who has played an important role in designing and documenting several computer programming languages.
{\textasciicircum} Q\&A with Guy Steele '75 Harvard School of Engineering and Applied Sciences, publication date unknown, accessed 2009-11-12},
	language = {en},
	urldate = {2015-03-08},
	journal = {Wikipedia, the free encyclopedia},
	author = {{Wikipedia}},
	month = mar,
	year = {2015},
	note = {Page Version ID: 649890638},
	file = {Snapshot:/Users/peter/Zotero/storage/5WJCHQXT/index.html:text/html}
}

@incollection{mackinnon_endo-testing:_2001,
	address = {Boston, MA},
	title = {Endo-testing: unit testing with mock objects},
	url = {http://www.ccs.neu.edu/research/demeter/related-work/extreme-programming/MockObjectsFinal.PDF},
	booktitle = {Extreme {Programming} {Examined}},
	publisher = {Addison-Wesley},
	author = {Mackinnon, Tim and Freeman, Steve and Craig, Philip},
	year = {2001},
	pages = {287 -- 301}
}

@book{succi_extreme_2001,
	address = {Boston},
	edition = {1st edition},
	title = {Extreme {Programming} {Examined}},
	isbn = {978-0-201-71040-3},
	language = {English},
	publisher = {Pearson Education},
	author = {Succi, Giancarlo and Marchesi, Michele},
	month = may,
	year = {2001}
}

@book{wilt_cuda_2013,
	title = {The {CUDA} {Handbook}: {A} {Comprehensive} {Guide} to {GPU} {Programming}},
	isbn = {978-0-321-80946-9},
	shorttitle = {The {CUDA} {Handbook}},
	language = {Englisch},
	publisher = {Addison Wesley},
	author = {Wilt, Nicholas},
	month = jun,
	year = {2013}
}

@article{sim_performance_2012,
	title = {A {Performance} {Analysis} {Framework} for {Identifying} {Potential} {Benefits} in {GPGPU} {Applications}},
	url = {http://www.cc.gatech.edu/~hyesoon/sim_ppopp12.pdf},
	language = {English},
	journal = {Proceedings of the 17th ACM SIGPLAN Symposium on Principles and Practices of Parallel Programming},
	author = {Sim, Jaewoong and Dasgupta, Aniruddha and Kim, Hyesoon and Vuduc, Richard},
	month = feb,
	year = {2012}
}

@misc{wikipedia_twos_2016,
	title = {Two's complement},
	copyright = {Creative Commons Attribution-ShareAlike License},
	url = {https://en.wikipedia.org/w/index.php?title=Two%27s_complement&oldid=730322017},
	abstract = {Two's complement is a mathematical operation on binary numbers, as well as a binary signed number representation based on this operation. Its wide use in computing makes it the most important example of a radix complement.
The two's complement of an N-bit number is defined as the complement with respect to 2N; in other words, it is the result of subtracting the number from 2N. This is also equivalent to taking the ones' complement and then adding one, since the sum of a number and its ones' complement is all 1 bits. The two's complement of a number behaves like the negative of the original number in most arithmetic, and positive and negative numbers can coexist in a natural way.
In two's-complement representation, positive numbers are simply represented as themselves, and negative numbers are represented by the two's complement of their absolute value; two tables on the right provide examples for N = 3 and N = 8. In general, negation (reversing the sign) is performed by taking the two's complement. This system is the most common method of representing signed integers on computers. An N-bit two's-complement numeral system can represent every integer in the range −(2N − 1) to +(2N − 1 − 1) while ones' complement can only represent integers in the range −(2N − 1 − 1) to +(2N − 1 − 1).
The two's-complement system has the advantage that the fundamental arithmetic operations of addition, subtraction, and multiplication are identical to those for unsigned binary numbers (as long as the inputs are represented in the same number of bits and any overflow beyond those bits is discarded from the result). This property makes the system both simpler to implement and capable of easily handling higher precision arithmetic. Also, zero has only a single representation, obviating the subtleties associated with negative zero, which exists in ones'-complement systems.},
	language = {en},
	urldate = {2016-08-09},
	journal = {Wikipedia, the free encyclopedia},
	author = {{Wikipedia}},
	month = jul,
	year = {2016},
	note = {Page Version ID: 730322017},
	file = {Snapshot:/Users/peter/Zotero/storage/6IHVZAAF/index.html:text/html}
}

@techreport{mossenbock_formale_1991,
	address = {Linz},
	title = {Formale {Beschreibung} der {Programmiersprache} {MiniModula2}},
	language = {German},
	institution = {Johannes Kepler Universität Linz, Institut für Informatik, Abteilung Software},
	author = {Mössenböck, Hanspeter and Rechenberg, Peter and Reichenberger, Christoph},
	month = sep,
	year = {1991},
	pages = {45}
}

@misc{softbank_robotics_who_2016,
	title = {Who is {NAO}?},
	url = {https://www.ald.softbankrobotics.com/en/cool-robots/nao},
	abstract = {58 cm in height, NAO is our first humanoid robot. He has continually been evolving since the beginning of his adventure in 2006.Currently in his 5th version, about 9,000 NAOs have already been sold throughout the world.NAO is an endearing, interactive and personalizable robot companion.Everyone can construct his own experience with specific applications based on his own imagination and needs.},
	urldate = {2016-08-18},
	journal = {SoftBank Robotics},
	author = {SoftBank Robotics},
	year = {2016},
	file = {Snapshot:/Users/peter/Zotero/storage/XTH693CS/nao.html:text/html}
}

@misc{inbar_new_2014,
	title = {A {New} {Operating} system for {NAO} - {NAOqi} 2.1},
	url = {http://www.robotlab.com/blog/a-new-operating-system-for-nao-naoqi-2.1},
	abstract = {Aldebaran Robotics' team just announced a new software release for NAO - NAOQi 2.1 with many improvements.},
	urldate = {2016-08-18},
	author = {Inbar, Elad},
	month = jun,
	year = {2014},
	file = {Snapshot:/Users/peter/Zotero/storage/4V65348D/a-new-operating-system-for-nao-naoqi-2.html:text/html}
}

@misc{robocup_2016_standard_platform_league_call_2015,
	title = {Call for {Applications} for {Participation}},
	url = {http://www.tzi.de/spl/bin/view/Website/Call2016},
	urldate = {2016-08-18},
	author = {RoboCup 2016 Standard Platform League},
	year = {2015}
}

@misc{fira_micro_2014,
	title = {Micro {Robot} {World} {Cup} {Soccer} {Tournament} ({MiroSot})},
	url = {http://www.fira.net/contents/sub03/sub03_3.asp},
	language = {English},
	author = {FIRA},
	year = {2014}
}

@misc{robocup_technical_committee_robocup_2016,
	title = {{RoboCup} {Standard} {Platform} {League} ({NAO}) {Rule} {Book}},
	url = {http://www.tzi.de/spl/pub/Website/Downloads/Rules2016.pdf},
	author = {RoboCup Technical Committee},
	month = jun,
	year = {2016}
}

@misc{spl_standard_2016,
	title = {Standard {Platform} {League}},
	url = {http://www.tzi.de/spl/bin/view/Website/WebHome},
	language = {English},
	urldate = {2016-09-04},
	author = {SPL},
	month = aug,
	year = {2016}
}

@inproceedings{bauer_fuzzy_1996,
	address = {New Orleans, Louisiana},
	title = {A fuzzy algorithm for pixel classification based on the discrepancy norm},
	isbn = {0-7803-3645-3},
	url = {https://www.academia.edu/26532835/A_fuzzy_algorithm_for_pixel_classification_based_on_the_discrepancy_norm},
	abstract = {A fuzzy algorithm for pixel classification based on the discrepancy norm},
	language = {English},
	urldate = {2016-11-06},
	booktitle = {Proceedings of {IEEE} 5th {International} {Fuzzy} {Systems} {FUZZY}-96},
	publisher = {IEEE},
	author = {Bauer, Peter and Bodenhofer, Ulrich and Klement, Erich Peter},
	year = {1996},
	file = {Snapshot:/Users/peter/Zotero/storage/QIX6565M/A_fuzzy_algorithm_for_pixel_classification_based_on_the_discrepancy_norm.html:text/html}
}

@book{rechenberg_technisches_2006,
	address = {München},
	edition = {Third},
	title = {Technisches {Schreiben}: (nicht nur) für {Informatiker}},
	isbn = {978-3-446-40695-7},
	shorttitle = {Technisches {Schreiben}},
	abstract = {GUTER STIL IST KEINE ZAUBEREI- Lernen Sie die wichtigsten Stilregeln kennen, die technische Texte lesbar und verständlich machen.- Mehr als 200 Beispiele aus der Informatik-Literatur und allgemeine Texte- Mit 80 Aufgaben (incl. Lösungen), 35 davon für alle Leser, 45 speziell für InformatikerTechnisches Schreiben ist nicht schwer. Trotzdem enthalten viele Texte sprachliche und stilistische Mängel, die zuweilen sogar die Verständlichkeit beeinträchtigen. Der Autor erläutert die elementaren Regeln für guten Stil in technischen Texten. Wer sie befolgt, kann die Qualität seiner Texte verbessern.Der erste Teil des Buches geht auf Stilfragen ein. An vielen Beispielen zeigt der Autor verbreitete Stilmängel und grammatikalische Probleme und bietet konkrete Lösungen an. Er empfiehlt vor allem, auf Klarheit, Kürze, Klang und Einfachheit zu achten. Mit Hilfe der Aufgaben kann sich der Leser in der Verbesserung seines Stils üben.Der zweite Teil behandelt Gliederung, Tabellen und Bilder, mathematisches Schreiben, Typografie, Arbeits- und Schreibmethoden und weitere Einzelfragen.},
	language = {Deutsch},
	publisher = {Carl Hanser Verlag GmbH \& Co. KG},
	author = {Rechenberg, Peter},
	month = aug,
	year = {2006}
}

@book{knuth_texbook_1984,
	address = {Reading, Mass},
	edition = {First},
	title = {The {TeXbook}},
	isbn = {978-0-201-13448-3},
	abstract = {This is the definitive and complete user manual to the TeX computerized typesetting system. TeX software offers both writers and publishers the opportunity to produce technical text, with the speed and efficiency of a computer system.},
	language = {English},
	publisher = {Addison-Wesley Professional},
	author = {Knuth, Donald E.},
	month = jan,
	year = {1984}
}

@book{lamport_latex_1985,
	address = {Reading, Mass},
	edition = {First},
	title = {Latex {Document} {Preparation} {System} {Users}},
	isbn = {978-0-201-15790-1},
	abstract = {This user's guide and reference for the LaTeX computer typesetting system has been revised to document features available in release LaTeX2e.},
	language = {English},
	publisher = {Addison Wesley Publishing Co},
	author = {Lamport, Leslie},
	month = oct,
	year = {1985}
}

@misc{hegarty_developing_2017,
	title = {Developing {iOS} 10 {Apps} with {Swift} - 2  {MVC}; {iOS}, {Xcode} and {Swift} {Demonstration}},
	url = {https://www.youtube.com/watch?v=3NJrL1DLoC0},
	abstract = {2  MVC; iOS, Xcode and Swift Demonstration

The lecture slides pdfs and reading assignments can be found here:

https://drive.google.com/drive/folder...},
	urldate = {2017-06-17},
	author = {Hegarty, Paul},
	month = feb,
	year = {2017},
	keywords = {Developing, iOS 10, Swift, Stanford}
}

@misc{wikipedia_transistor_2017,
	title = {Transistor},
	copyright = {Creative Commons Attribution-ShareAlike License},
	url = {https://en.wikipedia.org/w/index.php?title=Transistor&oldid=786470546},
	abstract = {A transistor is a semiconductor device used to amplify or switch electronic signals and electrical power. It is composed of semiconductor material usually with at least three terminals for connection to an external circuit. A voltage or current applied to one pair of the transistor's terminals controls the current through another pair of terminals. Because the controlled (output) power can be higher than the controlling (input) power, a transistor can amplify a signal. Today, some transistors are packaged individually, but many more are found embedded in integrated circuits.
The transistor is the fundamental building block of modern electronic devices, and is ubiquitous in modern electronic systems. Julius Edgar Lilienfeld patented a field-effect transistor in 1926 but it was not possible to actually construct a working device at that time. The first practically implemented device was a point-contact transistor invented in 1947 by American physicists John Bardeen, Walter Brattain, and William Shockley. The transistor revolutionized the field of electronics, and paved the way for smaller and cheaper radios, calculators, and computers, among other things. The transistor is on the list of IEEE milestones in electronics, and Bardeen, Brattain, and Shockley shared the 1956 Nobel Prize in Physics for their achievement.},
	language = {en},
	urldate = {2017-06-28},
	journal = {Wikipedia},
	author = {{Wikipedia}},
	month = jun,
	year = {2017},
	note = {Page Version ID: 786470546},
	file = {Snapshot:/Users/peter/Zotero/storage/R27XNPTA/index.html:text/html}
}

@misc{wikipedia_c++_2017,
	title = {The {C}++ {Programming} {Language}},
	copyright = {Creative Commons Attribution-ShareAlike License},
	url = {https://en.wikipedia.org/w/index.php?title=The_C%2B%2B_Programming_Language&oldid=787418766},
	abstract = {The C++ Programming Language was the first book to describe the C++ programming language, written by the language’s creator, Bjarne Stroustrup, and first published in October 1985. In the absence of an official standard, the book served for several years as the de facto documentation for the evolving C++ language until the release of the ISO/IEC 14882:1998: Programming Language C++ standard on 1 September 1998. As the standard further evolved with the standardization of language and library extensions and with the publication of technical corrigenda, later editions of the book were updated to incorporate the new changes.},
	language = {en},
	urldate = {2017-06-28},
	journal = {Wikipedia},
	author = {{Wikipedia}},
	month = jun,
	year = {2017},
	note = {Page Version ID: 787418766},
	file = {Snapshot:/Users/peter/Zotero/storage/DTEUZ5EU/index.html:text/html}
}

@misc{rofer_roboter-fusball:_2017,
	title = {Roboter-{Fußball}: {Zum} {Tor} mit den richtigen {Algorithmen}},
	shorttitle = {Roboter-{Fußball}},
	url = {https://www.heise.de/ct/artikel/Roboter-Fussball-Zum-Tor-mit-den-richtigen-Algorithmen-3754932.html},
	abstract = {In der Standard Platform League des RoboCups sehen alle Fußballspieler gleich aus. Wer das Tor schießt, entscheiden deshalb die besten Algorithmen.},
	urldate = {2017-06-29},
	journal = {c't},
	author = {Röfer, Thomas,  and Laue, Tim},
	month = jun,
	year = {2017},
	file = {Snapshot:/Users/peter/Zotero/storage/DWU7IP4H/Roboter-Fussball-Zum-Tor-mit-den-richtigen-Algorithmen-3754932.html:text/html}
}

@book{breiman_classification_1983,
	address = {Belmont, Calif},
	title = {Classification and {Regression} {Trees}},
	isbn = {978-0-534-98054-2},
	abstract = {the Wadsworth statistics probability series},
	language = {English},
	publisher = {Wadsworth Publishing},
	author = {Breiman, Leo and Friedman, Jerome H. and Olshen, Richard A. and Stone, Charles J.},
	month = jun,
	year = {1983}
}

@misc{stack_overflow_read_2014,
	title = {Read file from serial port using {Java}},
	url = {https://stackoverflow.com/questions/544824/read-file-from-serial-port-using-java},
	urldate = {2018-06-27},
	journal = {Stack Overflow},
	author = {{Stack Overflow}},
	month = aug,
	year = {2014},
	file = {Snapshot:/Users/peter/Zotero/storage/RXUVRAHG/read-file-from-serial-port-using-java.html:text/html}
}

@book{bohmer_elemente_2018,
	address = {Wiesbaden},
	edition = {17., korr. u. verb. Aufl. 2018 edition},
	title = {Elemente der angewandten {Elektronik}: {Kompendium} für {Ausbildung} und {Beruf}},
	isbn = {978-3-8348-1496-8},
	shorttitle = {Elemente der angewandten {Elektronik}},
	abstract = {Das zu Grunde liegende erfolgreiche didaktische Konzept wird beibehalten. Mit seinem besonderen Aufbau, der Behandlung von Themen auf jeweils einer Text- und einer Bildseite, ist das Buch durchgängig und übersichtlich gestaltet. Die einzelnen Gebiete sind in sich geschlossen behandelt und lassen sich für unterschiedliche Lehrveranstaltungen sowie autodidaktisch verwenden. Mit seinen zahlreichen Beispielen vermittelt das Buch zwischen Theorie und Praxis. Es ist ein zuverlässiger Begleiter für das Elektronikpraktikum und darüber hinaus Arbeitsgrundlage für Schaltungsentwickler. Diese 17. Auflage ...},
	language = {Deutsch},
	publisher = {Springer Vieweg},
	author = {Böhmer, Erwin and Ehrhardt, Dietmar and Oberschelp, Wolfgang},
	month = mar,
	year = {2018}
}

@misc{stack_overflow_vi_2016,
	title = {vi - {How} to exit the {Vim} editor?},
	url = {https://stackoverflow.com/questions/11828270/how-to-exit-the-vim-editor},
	urldate = {2018-06-27},
	journal = {Stack Overflow},
	author = {{Stack Overflow}},
	month = nov,
	year = {2016},
	file = {Snapshot:/Users/peter/Zotero/storage/5A3SPR4Z/how-to-exit-the-vim-editor.html:text/html}
}

@book{ullenboom_java_2017,
	address = {Bonn},
	edition = {13 edition},
	title = {Java ist auch eine {Insel}: {Programmieren} lernen mit dem {Standardwerk} für {Java}-{Entwickler}. {Ausgabe} 2017, aktuell zu {Java} 9.},
	isbn = {978-3-8362-5869-2},
	shorttitle = {Java ist auch eine {Insel}},
	abstract = {»Ein Kultbuch.« – iX – Magazin für professionelle Informationstechnik Das Standardwerk zur Java-Programmierung in 13. Auflage! Aktuell zu Java 9  Programmieren mit der Java Platform, Standard Edition 9 Java von A bis Z: Einführung, Praxis, Referenz Von Ausdrücken und Anweisungen zu Klassen und Objekten  Unser Handbuch ist die erste Wahl, wenn es um aktuelles und praktisches Java-Wissen geht. Java-Einsteiger, Studenten und Umsteiger profitieren seit mehr als einem Jahrzehnt von diesem Lehrwerk. Neben der Behandlung der Sprachgrundlagen von Java (Neu in Java 9: das Modulsystem Jigsaw) gibt es kompakte Einführungen in Spezialthemen. So erfahren Sie einiges über Threads, Algorithmen, GUIs, XML und Java. Dieses Buch gehört in das Regal eines jeden Java-Programmierers.  Aus dem Inhalt: Imperative Sprachkonzepte Klassen und Objekte Ausnahmebehandlung Generics Lambda-Ausdrücke und funktionale Programmierung Die Klassenbibliothek Nebenläufige Programmierung Einführung in Datenstrukturen, GUI-Entwicklung, Dateien, XML usw. Galileo Press heißt jetzt Rheinwerk Verlag.},
	language = {Deutsch},
	publisher = {Rheinwerk Computing},
	author = {Ullenboom, Christian},
	month = nov,
	year = {2017}
}

@misc{stack_overflow_how_2018,
	title = {How do {I} convert a {String} to an int in {Java}?},
	url = {https://stackoverflow.com/questions/5585779/how-do-i-convert-a-string-to-an-int-in-java},
	urldate = {2018-06-28},
	journal = {Stack Overflow},
	author = {{Stack Overflow}},
	month = jan,
	year = {2018},
	annote = {Tried to convert char by char but}
}

@book{feiler_swift_2015,
	address = {Hoboken, NJ},
	edition = {First},
	title = {Swift {For} {Dummies}},
	isbn = {978-1-119-02222-0},
	abstract = {Get up and running with Swift--swiftly Brimming with expert advice and easy-to-follow instructions, Swift For Dummies shows new and existing programmers how to quickly port existing Objective-C applications into Swift and get into the swing of the new language like a pro. Designed from the ground up to be a simpler programming language, it's never been easier to get started creating apps for the iPhone or iPad, or applications for Mac OS X. Inside the book, you'll find out how to set up Xcode for a new Swift application, use operators, objects, and data types, and control program flow with conditional statements. You'll also get the scoop on creating new functions, statements, and declarations, learn useful patterns in an object-oriented environment, and take advantage of frameworks to speed your coding along. Plus, you'll find out how Swift does away with pointer variables and how to reference and dereference variables instead.* Set up a playground development environment for Mac, iPhone, iPad, and wearable computers* Move an existing Objective-C program to Swift* Take advantage of framework components and subcomponents* Create an app that uses location, mapping, and social media Whether you're an existing Objective-C programmer looking to port your code to Swift or you've never programmed for Apple in the past, this fun and friendly guide gets you up to speed swiftly.},
	language = {Englisch},
	publisher = {For Dummies},
	author = {Feiler, Jesse},
	month = apr,
	year = {2015}
}

@misc{stack_overflow_javascript_2018,
	title = {javascript - {AngularJS} {Uploading} {An} {Image} {With} ng-upload},
	url = {https://stackoverflow.com/questions/17216806/angularjs-uploading-an-image-with-ng-upload},
	urldate = {2018-06-28},
	journal = {Stack Overflow},
	author = {{Stack Overflow}},
	month = jun,
	year = {2018},
	annote = {After playing around with upload snippet given by asdlfkjas this solved finally my problem.},
	file = {Snapshot:/Users/peter/Zotero/storage/BM6PJH65/angularjs-uploading-an-image-with-ng-upload.html:text/html}
}

@book{klein_no_2015,
	address = {Frankfurt am Main},
	edition = {First},
	title = {No {Logo}!: {Der} {Kampf} der {Global} {Players} um {Marktmacht} - {Ein} {Spiel} mit vielen {Verlierern} und wenigen {Gewinnern}},
	isbn = {978-3-596-03127-6},
	shorttitle = {No {Logo}!},
	abstract = {+++ Der Klassiker der Globalisierungskritik und Bestseller, jetzt im FISCHER Taschenbuch +++Die führende Intellektuelle unserer Zeit und Bestsellerautorin Naomi Klein offenbart die Machenschaften multinationaler Konzerne hinter der Fassade bunter Logos. Der von ihr propagierte Ausweg aus dem Markendiktat ist eine Auflehnung gegen die Täuschung der Verbraucher, gegen menschenunwürdige Arbeitsbedingungen, Zerstörung der Natur und kulturellen Kahlschlag.Denn durch ihre Demystifizierung verlieren die großen, global agierenden Marken an Glanz und Macht – zum Wohle aller.},
	language = {Deutsch},
	publisher = {FISCHER Taschenbuch},
	author = {Klein, Naomi},
	translator = {Schlatterer, Heike and Dierlamm, Helmut},
	month = apr,
	year = {2015}
}

@misc{wikipedia_web_2019,
	title = {Web {Components}},
	copyright = {Creative Commons Attribution-ShareAlike License},
	url = {https://en.wikipedia.org/w/index.php?title=Web_Components&oldid=892198622},
	abstract = {Web Components are a set of features that provide a standard component model for the Web allowing for encapsulation and interoperability of individual HTML elements.
Primary technologies used to create them include:
Custom Elements – APIs to define new HTML elements
Shadow DOM – Encapsulated DOM and styling, with composition
HTML Templates, an HTML fragment is not rendered, but stored until it is instantiated via JavaScript},
	language = {en},
	urldate = {2019-06-03},
	journal = {Wikipedia},
	author = {{Wikipedia}},
	month = apr,
	year = {2019},
	note = {Page Version ID: 892198622},
	file = {Snapshot:/Users/peter/Zotero/storage/54TAKXEN/index.html:text/html}
}

@misc{stack_overflow_replace_2015,
	title = {replace {String} with another in java},
	url = {https://stackoverflow.com/questions/5216272/replace-string-with-another-in-java},
	urldate = {2019-06-26},
	journal = {Stack Overflow},
	author = {{Stack Overflow}},
	month = sep,
	year = {2015},
	file = {Snapshot:/Users/peter/Zotero/storage/JKHFUNDY/replace-string-with-another-in-java.html:text/html}
}

@misc{stack_overflow_how_2015,
	title = {How to read user input in c\# console},
	url = {https://stackoverflow.com/questions/33216001/how-to-read-user-input-in-c-sharp-console},
	urldate = {2019-06-26},
	journal = {Stack Overflow},
	author = {{Stack Overflow}},
	year = {2015},
	keywords = {user input, problem input},
	file = {Snapshot:/Users/peter/Zotero/storage/3H6T6SJP/how-to-read-user-input-in-c-sharp-console.html:text/html}
}

@misc{love_9_2019,
	title = {9 {Ways} {To} {Remove} 🗑️ {Elements} {From} {A} {JavaScript} {Array} 📇[{Examples}]},
	url = {https://love2dev.com/blog/javascript-remove-from-array/},
	urldate = {2019-06-27},
	author = {Love, Chris},
	month = apr,
	year = {2019},
	keywords = {array remove problem},
	file = {9 Ways To Remove 🗑️ Elements From A JavaScript Array 📇[Examples]:/Users/peter/Zotero/storage/ZCFANFDP/javascript-remove-from-array.html:text/html}
}

@misc{stack_overflow_how_2018-1,
	title = {How do {I} remove a particular element from an array in {JavaScript}?},
	url = {https://stackoverflow.com/questions/5767325/how-do-i-remove-a-particular-element-from-an-array-in-javascript},
	urldate = {2019-06-27},
	journal = {Stack Overflow},
	author = {{Stack Overflow}},
	month = dec,
	year = {2018},
	keywords = {array remove problem},
	file = {Snapshot:/Users/peter/Zotero/storage/R2QNESDP/how-do-i-remove-a-particular-element-from-an-array-in-javascript.html:text/html}
}

@misc{stack_overflow_c_2014,
	title = {c\# - {Regex} isn't working. {Getting} a stack overflow error},
	url = {https://stackoverflow.com/questions/21632625/regex-isnt-working-getting-a-stack-overflow-error},
	urldate = {2020-07-08},
	journal = {Stack Overflow},
	author = {{Stack Overflow}},
	year = {2014},
	note = {Library Catalog: stackoverflow.com},
	file = {Snapshot:/Users/peter/Zotero/storage/6EPGKKF3/regex-isnt-working-getting-a-stack-overflow-error.html:text/html}
}

@book{reid_ios_2020,
	address = {Sebastopol (Ca)},
	title = {{iOS} {Unit} {Testing} by {Example}: {XCTest} {Tips} and {Techniques} {Using} {Swift}},
	isbn = {978-1-68050-681-5},
	shorttitle = {{iOS} {Unit} {Testing} by {Example}},
	abstract = {Fearlessly change the design of your iOS code with solid unit tests. Use Xcode's built-in test framework XCTest and Swift to get rapid feedback on all your code - including legacy code. Learn the tricks and techniques of testing all iOS code, especially view controllers (UIViewControllers), which are critical to iOS apps. Learn to isolate and replace dependencies in legacy code written without tests. Practice safe refactoring that makes these tests possible, and watch all your changes get verified quickly and automatically. Make even the boldest code changes with complete confidence.Manual code and UI testing get slower the deeper your navigation hierarchy goes. It can take several taps just to reach a particular screen, never mind the actual workflow tests. Automatic unit testing offers such rapid feedback that it can change the rules of development. Bring testing to iOS development, even for legacy code. Use XCTest to write unit tests in Swift for all your code.iOS developers typically reserve unit tests for their model classes alone. But that approach skips most of the code common to iOS apps, especially with UIViewControllers. Learn how to unit test these view controllers to expand your unit testing possibilities. Since good unit tests form the bedrock for safe refactoring, you're empowered to make bold changes. Learn how to avoid the most common mistakes Swift programmers make with the XCTest framework. Use code coverage to find holes in your test suites. Learn how to identify hard dependencies.Reshape the design of your code quickly, with less risk and less fear.},
	language = {Englisch},
	publisher = {O'Reilly UK Ltd.},
	author = {Reid, Jon},
	month = jul,
	year = {2020},
	annote = {Solved my annoying regex problem}
}
